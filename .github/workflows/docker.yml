name: Docker

on:
  push:
    branches:
      - main
      - develop
      - current
  pull_request:
    branches:
      - develop
  release:
    types: [published]

jobs:
  tests:
    name: Build containers and process tests
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILDKIT: 1
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: True

      - name: copy cur environment
        run: cp .env.current .env

      - name: Copy config samples
        run: ./scripts/init_applications_config.sh

      - name: Build all images
        run: ./build/build_geonature_all.sh

      - name: Lauch docker compose
        run: docker compose up -d

      - name: Log geonature backend
        run: |
          docker compose logs -f > /tmp/docker_compose.log &

      - name: test apps
        uses: nick-fields/retry@v2
        with:
          timeout_seconds: 60
          max_attempts: 15
          retry_wait_seconds: 20
          command: |
            ./scripts/test_docker.sh

      - name: Log if fail
        if: ${{ failure() }}
        run: |
          cat /tmp/docker_compose.log
          docker compose ps

  geonature-backend:
    name: Build and push container for geonature-backend
    if: ${{ github.event_name != 'pull_request' }}
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: True

      - name: Git GeoNature Sumbodule Update
        run: |
          git submodule init
          git submodule update
        working-directory: sources/GeoNature

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GHCR
        uses: docker/login-action@v2
        if: github.event_name != 'pull_request'
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate metadata for wheels image
        id: meta-wheels
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository_owner }}/gds-geonature-backend
          flavor: |
            suffix=-wheels
          tags: |
            type=ref,event=branch
            type=ref,event=tag

      - name: Build and export geonature backend wheels image
        id: build-wheels
        uses: docker/build-push-action@v4
        with:
          context: ./sources/GeoNature
          file: ./sources/GeoNature/backend/Dockerfile
          target: wheels
          push: true
          tags: ${{ steps.meta-wheels.outputs.tags }}
          labels: ${{ steps.meta-wheels.outputs.labels }}

      - name: Generate metadata for prod image
        id: meta-prod
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository_owner }}/gds-geonature-backend
          tags: |
            type=ref,event=branch
            type=ref,event=tag

      - name: Build and export geonature backend image (+ 4 modules)
        id: build-prod
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./build/Dockerfile-geonature-backend
          target: prod-extra
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-prod.outputs.tags }}
          labels: ${{ steps.meta-prod.outputs.labels }}
          build-args: GEONATURE_BACKEND_IMAGE=${{steps.meta-prod.outputs.tags[0]}}

  # geonature-frontend:
  #   name: Build geonature docker images for frontend
  #   if: ${{ github.event_name != 'pull_request' }}
  #   runs-on: ubuntu-latest
  #   needs: tests
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #       with:
  #         submodules: True

  #     - name: Git GeoNature Sumbodule Update
  #       run: |
  #         git submodule init
  #         git submodule update
  #       working-directory: ./sources/GeoNature

  #     - name: Set Environnement variables
  #       run: |
  #         scripts/init_env.sh >> $GITHUB_ENV

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2

  #     - name: Login to GHCR
  #       uses: docker/login-action@v2
  #       if: github.event_name != 'pull_request'
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Build and export frontend source
  #       uses: docker/build-push-action@v4
  #       with:
  #         context: ./sources/GeoNature
  #         file: ./sources/GeoNature/frontend/Dockerfile
  #         target: source
  #         tags: "${{env.GN_FRONTEND_TAGS}}-source"
  #         push: true

  #     - name: Build and export frontend nginx
  #       uses: docker/build-push-action@v4
  #       with:
  #         context: ./sources/GeoNature
  #         file: ./sources/GeoNature/frontend/Dockerfile
  #         target: prod-base
  #         tags: "${{env.GN_FRONTEND_TAGS}}-nginx"
  #         push: true

  #     - name: Build and export frontend app image
  #       uses: docker/build-push-action@v4
  #       with:
  #         context: ./sources/GeoNature
  #         file: ./sources/GeoNature/frontend/Dockerfile
  #         tags: "${{env.GN_FRONTEND_TAGS}}"
  #         push: true
  #         target: prod

  #     - name: Build and export frontend + 4 modules
  #       uses: docker/build-push-action@v4
  #       with:
  #         context: .
  #         file: ./build/Dockerfile-geonature-frontend
  #         tags: "${{env.GN_FRONTEND_4M_TAGS}}"
  #         build-args: GEONATURE_FRONTEND_IMAGE=${{env.GN_FRONTEND_IMAGE}}
  #         push: true
