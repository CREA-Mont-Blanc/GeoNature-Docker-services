name: Docker

on:
  push:
    branches:
      - main
      - develop
  release:
    types: [published]

jobs:
  tests:
    name: Build geonature images locally and test services
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: True

      - name: Git GeoNature Sumbodule Update
        run: |
          git submodule init
          git submodule update
        working-directory: sources/GeoNature

      - name: copy cur environment
        run: cp .env.current .env

      - name: Build all images
        run: ./build/build_geonature_all.sh

      - name: Copy config samples
        run: |
          cp data/apps/geonature/config/geonature_config.toml.sample data/apps/geonature/config/geonature_config.toml
          cp data/apps/taxhub/config/config.py.sample data/apps/taxhub/config/config.py
          cp data/apps/usershub/config/config.py.sample data/apps/usershub/config/config.py

      - name: Lauch docker compose
        run: docker compose up -d

      - name: Wait for services to be ready and run tests
        run: echo TODO

  backend:
    name: Build geonature docker images for backend
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: True

      - name: Git GeoNature Sumbodule Update
        run: |
          git submodule init
          git submodule update
        working-directory: sources/GeoNature

      - name: Set Environnement variables
        run: |
          scripts/init_env.sh >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GHCR
        uses: docker/login-action@v2
        if: github.event_name != 'pull_request'
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and export backend app image
        uses: docker/build-push-action@v4
        with:
          context: ./sources/GeoNature
          file: ./sources/GeoNature/backend/Dockerfile
          tags: "${{env.GN_BACKEND_TAGS}}"
          push: true
          target: prod

      - name: Build and export backend wheels image
        uses: docker/build-push-action@v4
        with:
          context: ./sources/GeoNature
          file: ./sources/GeoNature/backend/Dockerfile
          tags: "${{env.GN_BACKEND_TAGS}}-wheels"
          push: true
          target: wheels

      - name: Build and export backend app + 4 modules
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./build/Dockerfile-geonature-backend
          tags: "${{env.GN_BACKEND_4M_TAGS}}"
          labels: |
            org.opencontainers.image.title=Application GeoNature + 4 modules principaux
            org.opencontainers.image.description=${{env.GN_4M_DESCRIPTION}}
            ${{env.GN_LABELS}}
          push: true
          build-args: GEONATURE_BACKEND_IMAGE=${{env.GN_BACKEND_IMAGE}}

  frontend:
    name: Build geonature docker images for frontend
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: True

      - name: Git GeoNature Sumbodule Update
        run: |
          git submodule init
          git submodule update
        working-directory: ./sources/GeoNature

      - name: Set Environnement variables
        run: |
          scripts/init_env.sh >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GHCR
        uses: docker/login-action@v2
        if: github.event_name != 'pull_request'
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and export frontend source
        uses: docker/build-push-action@v4
        with:
          context: ./sources/GeoNature
          file: ./sources/GeoNature/frontend/Dockerfile
          target: source
          tags: "${{env.GN_FRONTEND_TAGS}}-source"
          push: true

      - name: Build and export frontend nginx
        uses: docker/build-push-action@v4
        with:
          context: ./sources/GeoNature
          file: ./sources/GeoNature/frontend/Dockerfile
          target: prod-base
          tags: "${{env.GN_FRONTEND_TAGS}}-nginx"
          push: true

      - name: Build and export frontend app image
        uses: docker/build-push-action@v4
        with:
          context: ./sources/GeoNature
          file: ./sources/GeoNature/frontend/Dockerfile
          tags: "${{env.GN_FRONTEND_TAGS}}"
          push: true
          target: prod

      - name: Build and export frontend + 4 modules
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./build/Dockerfile-geonature-frontend
          tags: "${{env.GN_FRONTEND_4M_TAGS}}"
          build-args: GEONATURE_FRONTEND_IMAGE=${{env.GN_FRONTEND_IMAGE}}
          push: true
